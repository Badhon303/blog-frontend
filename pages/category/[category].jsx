import Head from "next/head"
import Tabs from "../../components/Tabs"
import ArticleList from "../../components/ArticleList"
import Pagination from "../../components/Pagination"
import { fetchCategories, fetchArticles } from "../../api"
import qs from "qs"
import { makeCategory, debounce } from "../../utils"
import { useRouter } from "next/router"

const category = ({ categories, articles, slug }) => {
  const { page, pageCount } = articles.pagination
  const router = useRouter()
  const { category: categorySlug } = router.query
  const formattedCategory = () => {
    return makeCategory(slug)
  }
  const handleSearch = (query) => {
    router.push(`/category/${categorySlug}/?search=${query}`)
  }
  return (
    <>
      <Head>
        <title>Blog App {formattedCategory()}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Tabs
        categories={categories.items}
        handleOnSearch={debounce(handleSearch, 500)}
      />
      <ArticleList articles={articles.items} />
      <Pagination
        page={page}
        pageCount={pageCount}
        redirectUrl={`/category/${categorySlug}`}
      />
    </>
  )
}

export const getServerSideProps = async ({ query }) => {
  // fetch categories
  const { data: categories } = await fetchCategories()
  const options = {
    populate: ["users_permissions_user.image"],
    sort: ["id:desc"],
    filters: {
      category: {
        slug: query.category,
      },
    },
    pagination: {
      page: query.page ? query.page : 1,
      pageSize: 10,
    },
  }
  if (query.search) {
    options.filters = {
      Title: {
        $containsi: query.search,
      },
    }
  }
  const queryString = qs.stringify(options)
  const { data: articles } = await fetchArticles(queryString)

  return {
    props: {
      categories: {
        items: categories.data,
      },
      articles: {
        items: articles.data,
        pagination: articles.meta.pagination,
      },
      slug: query.category,
    },
  }
}

export default category
